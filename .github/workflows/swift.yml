name: Swift

on: [push, pull_request]

jobs:
  Test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: YOCKOW/Action-setup-swift@main
    - name: Install Requirements
      run: wget http://repo.mysql.com/mysql-apt-config_0.8.16-1_all.deb && \
           echo mysql-apt-config    mysql-apt-config/repo-codename  select  bionic | debconf-set-selections && \
           echo mysql-apt-config    mysql-apt-config/repo-distro    select  ubuntu | debconf-set-selections && \
           echo mysql-apt-config    mysql-apt-config/select-server  select  mysql-5.7 | debconf-set-selections && \
           echo mysql-apt-config    mysql-apt-config/select-product select  Ok | debconf-set-selections && \
           dpkg -i mysql-apt-config_0.8.16-1_all.deb && \
           apt-get update && \
           sudo apt-get update && \
           sudo apt-get install -y libssl-dev libcurl4-openssl-dev libmysqlclient-dev uuid-dev imagemagick mysql-client-5.7 && \
           sudo sed -i -e 's/-fabi-version=2 -fno-omit-frame-pointer//g' /usr/lib/x86_64-linux-gnu/pkgconfig/mysqlclient.pc && \
           sudo cp /usr/bin/convert /usr/local/bin
    - name: Resolve
      run: swift package resolve
    - name: Build
      run: swift build --enable-test-discovery -Xswiftc -g -c debug
    - name: Test
      run: swift test --enable-test-discovery -Xswiftc -g -c debug
  Deploy:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Set .gitsha
      if: github.event_name == 'push'
      run: "echo ${{github.sha}} > .gitsha"
    - name: Set .gitref
      if: github.event_name == 'push'
      run: "echo ${{github.ref}} > .gitref"
    - name: Publish
      uses: 123FLO321/github-docker-temp@0.5.0
      if: github.event_name == 'push'
      with:
        accessToken: ${{ secrets.GITHUB_TOKEN }}
    - name: Start MR Build System
      if: github.event_name == 'pull_request'
      run: 'curl https://build.realdevicemap.com/workflow/build -X POST -H "Content-Type: application/json" -d "{\"ref\":\"${{github.ref}}\",\"sha\":\"${{github.sha}}\",\"swift_version\":\"5\"}" --fail'
    - name: Wait for MR Build System
      if: github.event_name == 'pull_request'
      run: |
        while true; do
          sleep 5
          status=$(curl https://build.realdevicemap.com/workflow/status -X POST -H "Content-Type: application/json" -d '{"ref":"${{github.ref}}","sha":"${{github.sha}}","swift_version":"5"}' --fail -s)
          if [[ $status == "failed" ]]; then
             exit 1
          fi
           if [[ $status == "success" ]]; then
             exit 0
          fi
        done

